name: Build and publish a Docker image

on:
    push:
        branches: ['main']
        tags:
            - 'v*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-image-testing:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Log in to the Container registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=test,enable=true

            - name: Build and push Docker image
              uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
              with:
                  context: .
                  push: true
                  build-args: |
                      BUILD_MODE=development
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    build-and-push-image-production:
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/v')
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Log in to the Container registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=tag,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
                      type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            - name: Build and push Docker image
              uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
              with:
                  context: .
                  push: true
                  build-args: |
                      BUILD_MODE=production
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    deploy-testing:
        name: Deploy Testing
        needs: build-and-push-image-testing
        runs-on: [self-hosted, Linux]
        environment:
            name: Testing
            url: https://devtools.ui.test.profcomff.com/
        env:
            CONTAITER_NAME: com_profcomff_ui_devtools_test
        permissions:
            packages: read

        steps:
            - name: Run docker container
              run: |
                  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
                  docker stop ${{ env.CONTAITER_NAME }} || true && docker rm ${{ env.CONTAITER_NAME }} || true
                  docker run \
                    --detach \
                    --restart on-failure:3 \
                    --network=web \
                    --name ${{ env.CONTAITER_NAME }} \
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test

    deploy-production:
        name: Deploy Production
        needs: build-and-push-image-production
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: [self-hosted, Linux]
        environment:
            name: Production
            url: https://devtools.ui.profcomff.com/
        env:
            CONTAITER_NAME: com_profcomff_ui_devtools
        permissions:
            packages: read

        steps:
            - name: Run docker container
              run: |
                  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                  docker stop ${{ env.CONTAITER_NAME }} || true && docker rm ${{ env.CONTAITER_NAME }} || true
                  docker run \
                    --detach \
                    --restart always \
                    --network=web \
                    --name ${{ env.CONTAITER_NAME }} \
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
